#!/bin/bash

replication_user=<%= scope['::continuent_install::int_replicationUser'] %>
replication_password=<%= scope['::continuent_install::int_replicationPassword'] %>
port=<%= scope['::continuent_install::mysqlPort'] %>
application_user=<%= scope['::continuent_install::appUser'] %>
application_password=<%= scope['::continuent_install::appPassword'] %>
master_user=<%= scope['::continuent_install::masterUser'] %>
master_password=<%= scope['::continuent_install::masterPassword'] %>


#Create the replication User if it does not exist
sqlCheck="select * from mysql.user where user='$replication_user'"
sqlExec="grant all on *.* to $replication_user identified by '$replication_password' with grant option;"

if [ `/usr/bin/mysql -u $master_user -p$master_password -P $port -Be "$sqlCheck"|wc -l` -eq 0 ]
then
    /usr/bin/mysql -u $master_user -p$master_password  -P $port -Be "$sqlExec"
fi


#Create the application user if it does not exist
sqlCheck="select * from mysql.user where user='$application_user'"
sqlExec="grant all privileges on *.* to $application_user identified by '$application_password';revoke super on *.* from $application_user"

if [ `/usr/bin/mysql -u $master_user -p$master_password  -P $port -Be "$sqlCheck"|wc -l` -eq 0 ]
then
    /usr/bin/mysql -u $master_user -p$master_password  -P $port -Be "$sqlExec"
fi


#Check the replication password matches
sqlCheck="select * from mysql.user where user='$replication_user' and password=password('$replication_password')"

if [ `/usr/bin/mysql -u $master_user -p$master_password  -P $port -Be "$sqlCheck"|wc -l` -eq 0 ]
then
    echo "Replication password in module is not the same as exists in MySQL"
    exit 2
fi

#Check the application password matches
sqlCheck="select * from mysql.user where user='$application_user' and password=password('$application_password')"

if [ `/usr/bin/mysql -u $master_user -p$master_password  -P $port -Be "$sqlCheck"|wc -l` -eq 0 ]
then
    echo "Application password in module is not the same as exists in MySQL"
    exit 2
fi

#!/bin/bash
#

#docker images | grep '<none>' | awk '{print $3}'|xargs docker rmi &> /dev/null
WORKGIT=$1
BUILDDIR=$2
RPMPREFIX=$3
DEBPREFIX=$4
OS_LIST='centos5 centos6 ubuntu.12.04 ubuntu.14.04 wheezy oracle6'

if [ -n "$5" ]
then
  OS_LIST=$5
fi
mkdir logs > /dev/null
mkdir logs2 > /dev/null

chmod +x get_modules
chmod +x run_tests_single_node_os
./get_modules $BUILDDIR $WORKGIT $RPMPREFIX $DEBPREFIX



RC=0
for os in $OS_LIST
do

  ./run_tests_single_node_os $os &> logs2/$os.log &
  # echo "Operating System =  $os"
  # rm -rf base$os/tungsten
  # docker build  -t="cbase/$os" base$os | grep Error:
  # for f in puppet/*.pp
  # do
  #  echo " ... $f"
  #  basedir=$(dirname $f)
  #  pwd=$(pwd)
  #  filename=$(basename $f)
  #  docker run --rm=true -v $BUILDDIR/$basedir:/mnt cbase/$os puppet apply /mnt/$filename --modulepath=/mnt/modules &> logs/$os.$filename.log
  #  c=$(cat logs/$os.$filename.log|grep Error|grep -v Unsupported|wc -l)
  #  if [ $c -ne 0 ]
  #  then
  #     RC=2
  #     cat logs/$os.$filename.log|grep Error|grep -v Unsupported
  #  #else
  #  #    cat logs/$os.$filename.log|grep supported
  #  fi
  # done


done

wait

for os in $OS_LIST
do
  cat logs2/$os.log
done

exit $RC
